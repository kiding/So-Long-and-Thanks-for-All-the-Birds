 // sublimehq/anim_encoder https://github.com/sublimehq/anim_encoder

var screen_timeline = [{"delay": 200, "blit": [[0, 0, 676, 768, 0, 0]]}, {"delay": 200, "blit": [[217, 4569, 91, 9, 57, 87]]}, {"delay": 200, "blit": [[333, 4660, 91, 9, 57, 87], [659, 819, 7, 8, 118, 104], [666, 865, 8, 4, 638, 169], [333, 4629, 163, 13, 462, 191], [399, 327, 171, 14, 399, 259], [652, 860, 8, 5, 638, 259], [399, 395, 217, 14, 399, 327], [462, 463, 168, 14, 462, 395], [389, 479, 119, 12, 389, 411], [399, 531, 232, 14, 399, 463], [389, 547, 190, 12, 389, 479], [399, 599, 232, 14, 399, 531], [389, 411, 190, 12, 389, 547], [462, 667, 161, 12, 462, 599], [586, 723, 47, 24, 586, 655], [389, 735, 196, 14, 389, 667], [326, 4533, 326, 54, 322, 710]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [668, 856, 8, 5, 638, 169], [0, 4601, 232, 14, 399, 191], [0, 4629, 190, 12, 389, 207], [399, 599, 183, 14, 399, 259], [664, 799, 8, 12, 638, 261], [462, 667, 161, 14, 462, 327], [389, 723, 244, 26, 389, 383], [453, 343, 119, 12, 389, 411], [0, 4243, 326, 136, 322, 438], [586, 723, 47, 24, 586, 587], [393, 4490, 196, 12, 389, 599], [393, 4083, 217, 14, 389, 667], [393, 4100, 53, 11, 389, 684], [0, 4515, 326, 54, 322, 710]]}, {"delay": 200, "blit": [[48, 4653, 91, 9, 57, 87], [652, 799, 12, 8, 112, 104], [660, 856, 8, 5, 638, 169], [217, 4587, 232, 14, 399, 191], [389, 207, 190, 12, 389, 207], [462, 667, 161, 12, 462, 259], [316, 1536, 8, 5, 638, 270], [586, 723, 47, 24, 586, 315], [389, 735, 196, 14, 389, 327], [0, 4243, 326, 68, 322, 370], [336, 4204, 48, 48, 332, 448], [67, 4322, 65, 13, 389, 449], [445, 4219, 64, 12, 441, 463], [326, 4465, 326, 68, 322, 506], [393, 4083, 217, 14, 389, 599], [393, 4100, 53, 11, 389, 616], [596, 315, 37, 10, 596, 655], [67, 4540, 217, 14, 389, 667], [393, 910, 53, 11, 389, 684], [10, 4615, 153, 14, 399, 735]]}, {"delay": 200, "blit": [[515, 4643, 91, 9, 57, 87], [664, 848, 6, 8, 118, 104]]}, {"delay": 200, "blit": [[424, 4643, 91, 9, 57, 87], [652, 847, 6, 8, 118, 104], [326, 4126, 326, 136, 322, 166], [393, 4490, 177, 14, 389, 327], [0, 4107, 326, 136, 322, 370], [596, 315, 37, 10, 596, 519], [0, 4615, 177, 14, 389, 531], [265, 4671, 321, 2, 322, 577], [0, 3923, 326, 184, 322, 580]]}, {"delay": 200, "blit": [[217, 4569, 91, 9, 57, 87], [326, 3990, 326, 136, 322, 166], [596, 315, 37, 10, 596, 315], [67, 4200, 177, 12, 389, 327], [596, 315, 37, 10, 596, 383], [0, 4615, 217, 14, 389, 395], [393, 910, 53, 11, 389, 412], [265, 4671, 321, 2, 322, 441], [0, 3603, 326, 320, 322, 444]]}, {"delay": 200, "blit": [[515, 4652, 91, 9, 57, 87], [658, 843, 6, 8, 118, 104], [652, 865, 8, 4, 638, 170], [449, 4587, 217, 14, 389, 191], [139, 4653, 53, 11, 389, 208], [596, 315, 37, 10, 596, 247], [67, 4540, 217, 14, 389, 259], [393, 910, 53, 11, 389, 276], [664, 842, 8, 6, 638, 286], [10, 4615, 153, 14, 399, 327], [265, 4671, 321, 2, 322, 373], [326, 3602, 326, 388, 322, 376]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [652, 839, 6, 8, 118, 104]]}, {"delay": 200, "blit": [[333, 4642, 91, 9, 57, 87], [664, 791, 12, 8, 112, 104], [606, 4643, 36, 19, 610, 170], [0, 4569, 217, 26, 389, 179], [453, 208, 53, 11, 389, 208], [265, 4669, 321, 2, 322, 237], [326, 2558, 326, 524, 322, 240]]}, {"delay": 200, "blit": [[515, 4643, 91, 9, 57, 87], [0, 1964, 326, 598, 322, 166]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [658, 835, 6, 8, 118, 104], [326, 1366, 326, 598, 322, 166]]}, {"delay": 200, "blit": [[217, 4569, 91, 9, 57, 87]]}, {"delay": 200, "blit": [[515, 4643, 91, 9, 57, 87], [670, 834, 6, 8, 118, 104]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [0, 1366, 326, 598, 322, 166]]}, {"delay": 200, "blit": [[217, 4569, 91, 9, 57, 87], [118, 104, 7, 8, 118, 104], [326, 768, 326, 598, 322, 166]]}, {"delay": 200, "blit": [[515, 4643, 91, 9, 57, 87]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [652, 791, 12, 8, 113, 104], [0, 768, 326, 598, 322, 166]]}, {"delay": 200, "blit": [[217, 4569, 91, 9, 57, 87], [670, 848, 6, 7, 118, 104]]}, {"delay": 200, "blit": [[515, 4652, 91, 9, 57, 87], [664, 834, 6, 8, 118, 104], [652, 855, 8, 5, 638, 169], [77, 1046, 190, 14, 399, 376], [664, 768, 8, 13, 638, 388], [596, 315, 37, 10, 596, 432], [67, 1114, 204, 14, 389, 444], [77, 1182, 194, 14, 399, 512], [77, 1250, 113, 14, 399, 580], [0, 1296, 321, 2, 322, 626], [326, 4262, 326, 135, 322, 629]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87]]}, {"delay": 200, "blit": [[217, 4569, 91, 9, 57, 87], [652, 831, 6, 8, 118, 104], [666, 861, 8, 4, 638, 169], [496, 4629, 150, 14, 400, 191], [7, 1300, 298, 4, 329, 241], [0, 3085, 326, 518, 322, 246]]}, {"delay": 200, "blit": [[515, 4643, 91, 9, 57, 87], [666, 819, 7, 7, 118, 104]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [652, 815, 7, 8, 118, 104], [265, 4628, 68, 34, 578, 169], [445, 4615, 188, 14, 389, 191], [48, 4662, 45, 12, 389, 207], [0, 2562, 326, 523, 322, 241]]}, {"delay": 200, "blit": [[333, 4642, 91, 9, 57, 87], [658, 827, 6, 8, 118, 104]]}, {"delay": 200, "blit": [[424, 4652, 91, 9, 57, 87], [652, 869, 8, 2, 638, 170], [55, 843, 262, 1, 377, 241], [1, 845, 324, 1, 323, 243], [326, 3082, 326, 520, 322, 244]]}, {"delay": 200, "blit": [[333, 4651, 91, 9, 57, 87], [652, 807, 11, 8, 113, 104], [0, 4641, 48, 41, 332, 248], [217, 4628, 48, 49, 332, 353]]}, {"delay": 200, "blit": [[333, 4642, 91, 9, 57, 87], [326, 1964, 326, 594, 322, 170]]}, {"delay": 200, "blit": [[515, 4643, 91, 9, 57, 87], [666, 826, 6, 8, 118, 104], [217, 4615, 228, 13, 399, 191], [48, 4641, 135, 12, 389, 207], [403, 3512, 228, 14, 399, 259], [389, 275, 135, 12, 389, 275], [403, 2189, 189, 14, 399, 327], [0, 4447, 326, 68, 322, 370], [672, 768, 4, 4, 483, 456]]}, {"delay": 200, "blit": [[424, 4643, 91, 9, 57, 87], [662, 781, 10, 10, 480, 385]]}, {"delay": 200, "blit": [[333, 4642, 91, 9, 57, 87], [652, 823, 6, 8, 118, 104], [232, 4601, 228, 14, 399, 191], [393, 2001, 135, 12, 389, 207], [403, 2189, 189, 14, 399, 259], [326, 4397, 326, 68, 322, 302], [652, 780, 10, 10, 480, 385]]}, {"delay": 200, "blit": [[217, 4578, 91, 9, 57, 87], [460, 4601, 189, 14, 399, 191], [0, 4379, 326, 68, 322, 234], [660, 861, 6, 6, 482, 319]]}, {"delay": 200, "blit": [[57, 87, 91, 9, 57, 87], [663, 811, 8, 8, 481, 250]]}, {"delay": 4000, "blit": [[217, 4569, 91, 9, 57, 87], [652, 768, 12, 12, 479, 248]]}]

var delay_scale = 0.5
var timer = null

var animate = function(img, timeline, element)
{
	var i = 0

	var run_time = 0
	for (var j = 0; j < timeline.length - 1; ++j)
		run_time += timeline[j].delay

	var f = function()
	{
		var frame = i++ % timeline.length
		var delay = timeline[frame].delay * delay_scale
		var blits = timeline[frame].blit

		var ctx = element.getContext('2d')

		for (j = 0; j < blits.length; ++j)
		{
			var blit = blits[j]
			var sx = blit[0]
			var sy = blit[1]
			var w = blit[2]
			var h = blit[3]
			var dx = blit[4]
			var dy = blit[5]
			ctx.drawImage(img, sx, sy, w, h, dx, dy, w, h)
		}

		timer = window.setTimeout(f, delay)
	}

	if (timer) window.clearTimeout(timer)
	f()
}

var animate_fallback = function(img, timeline, element)
{
	var i = 0

	var run_time = 0
	for (var j = 0; j < timeline.length - 1; ++j)
		run_time += timeline[j].delay

	var f = function()
	{
		if (i % timeline.length == 0)
		{
			while (element.hasChildNodes())
				element.removeChild(element.lastChild)
		}

		var frame = i++ % timeline.length
		var delay = timeline[frame].delay * delay_scale
		var blits = timeline[frame].blit

		for (j = 0; j < blits.length; ++j)
		{
			var blit = blits[j]
			var sx = blit[0]
			var sy = blit[1]
			var w = blit[2]
			var h = blit[3]
			var dx = blit[4]
			var dy = blit[5]

			var d = document.createElement('div')
			d.style.position = 'absolute'
			d.style.left = dx + "px"
			d.style.top = dy + "px"
			d.style.width = w + "px"
			d.style.height = h + "px"
			d.style.backgroundImage = "url('" + img.src + "')"
			d.style.backgroundPosition = "-" + sx + "px -" + sy + "px"

			element.appendChild(d)
		}

		timer = window.setTimeout(f, delay)
	}

	if (timer) window.clearTimeout(timer)
	f()
}

function set_animation(img_url, timeline, canvas_id, fallback_id)
{
	var img = new Image()
	img.onload = function()
	{
		var canvas = document.getElementById(canvas_id)
		if (canvas && canvas.getContext)
			animate(img, timeline, canvas)
		else
			animate_fallback(img, timeline, document.getElementById(fallback_id))
	}
	img.src = img_url
}

set_animation("screen_packed.jpg", screen_timeline, 'anim_target');

///

setTimeout(function(){
	document.getElementById("share").style.opacity = 1
}, 3000)